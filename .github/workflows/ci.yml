name: CI

on:
  push:
    branches: [main]
    tags: "v*"
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - run: make build

      - run: dist/dbmate* --version

      - name: Publish release binaries
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - run: |
          set -x
          docker version
          docker-compose version

      - name: Cache
        uses: actions/cache@v2
        with:
          key: cache
          path: .cache

      - name: Build docker image
        run: |
          set -x
          docker-compose build
          docker-compose run --rm --no-deps dbmate --version

      - name: Build binaries
        run: |
          set -x
          docker-compose run --rm --no-deps dev make build
          dist/dbmate-linux-amd64 --version

      - name: Lint
        run: docker-compose run --rm --no-deps dev make lint

      - name: Start test dependencies
        run: |
          set -x
          docker-compose pull --quiet
          docker-compose up --detach

      - name: Run tests
        run: |
          set -x
          docker-compose run --rm dev make wait
          docker-compose run --rm dev make test

      - name: Publish docker image
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
        env:
          SRC_IMAGE: dbmate_release
          DOCKERHUB_IMAGE: ${{ github.repository }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          GHCR_IMAGE: ghcr.io/${{ github.repository }}
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: .github/workflows/publish-docker.sh
